{"ast":null,"code":"import _classCallCheck from \"C:/Users/EthanDonovan/Documents/shopping-list/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/EthanDonovan/Documents/shopping-list/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { throwError, Subject } from \"rxjs\";\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.user = new Subject();\n    }\n\n    _createClass(AuthService, [{\n      key: \"signup\",\n      value: function signup(email, password) {\n        return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAiT3yHTXlDLwx1D4c7dH0xtYx8OZGd8R4', {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError), tap(function (responseData) {}));\n      }\n    }, {\n      key: \"handleAuthentication\",\n      value: function handleAuthentication(email, token, expiresIn) {\n        //create a new expiration date by getting the current time in seconds and adding expires in\n        var expirationDate = new Date(new Date().getTime() + +responseData.expiresIn * 1000);\n        var user = new User(email, localId, idToken, expirationDate);\n        this.user.next(user);\n      }\n    }, {\n      key: \"login\",\n      value: function login(email, password) {\n        return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAiT3yHTXlDLwx1D4c7dH0xtYx8OZGd8R4', {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(errorRes) {\n        var errorMessage = 'An unknow error occurred while signing';\n        debugger;\n\n        if (!errorRes.error || !errorRes.error.error) {\n          return throwError(errorMessage);\n        }\n\n        console.log(errorRes);\n\n        switch (errorRes.error.error.message) {\n          case 'EMAIL_EXISTS':\n            errorMessage = 'This email already exists, please try another email';\n            break;\n\n          case 'INVALID_PASSWORD':\n            errorMessage = 'This password is invalid, please try again later';\n            break;\n\n          case 'EMAIL_NOT_FOUND':\n            errorMessage = 'This email does not exist';\n            break;\n\n          case 'USER_DISABLED':\n            errorMessage = 'Account is disabled by admin';\n        }\n\n        return throwError(errorMessage);\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}